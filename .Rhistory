#pie(genderData$n, labels = genderData$gender, main="Enrollments by gender")
#age range
agerangeData = dfE %>%
group_by(age_range) %>%
count(dfE$age_range)
agerangeData = select(agerangeData, age_range, n)
barplot(agerangeData$n, main="Enrollments by age range",
names.arg = c("<18", ">65", "18-25", "26-35", "36-45", "46-55", "56-65","Unknown"))
#pie(agerangeData$n, labels = agerangeData$age_range, main="Enrollments by age range")
#highest_education_level
highestEducationData = dfE %>%
group_by(highest_education_level) %>%
count(dfE$highest_education_level)
highestEducationData = select(highestEducationData, highest_education_level, n)
barplot(highestEducationData$n, main="Enrollments by highest education",
names.arg = c("Apprenticeship", "<Secondary", "Professional", "Secondary", "Tertiary", "Degree", "Doctrate", "Masters", "Unknown"))
#pie(highestEducationData$n, labels = highestEducationData$highest_education_level, main="Enrollments by highest education")
#employment area
employmentareaData = dfE %>%
group_by(employment_area) %>%
count(dfE$employment_area)
employmentareaData = select(employmentareaData, employment_area, n)
barplot(employmentareaData$n, main="Enrollments by employment area",
names.arg = employmentareaData$employment_area)
#pie(employmentareaData$n, labels = employmentareaData$employment_area, main="Enrollments by employment area")
#employment area
employmentstatusData = dfE %>%
group_by(employment_status) %>%
count(dfE$employment_status)
employmentstatusData = select(employmentstatusData, employment_status, n)
barplot(employmentstatusData$n, main="Enrollments by employment status",
names.arg = employmentstatusData$employment_status)
#pie(employmentstatusData$n, labels = employmentstatusData$employment_status, main="Enrollments by employment status")
par(mfrow=c(1,1))
)
par(mfrow=c(2,3))
#country
countryData = dfE %>%
group_by(country) %>%
count(dfE$country) #do a count
countryData = filter(countryData, n > 100) #filter only where greater than 100
countryData = select(countryData, country, n) #select the correct cols
barplot(countryData$n, main="Enrollments by country greater than 100",
names.arg = c("Australia", 'GB', "India", "Nigeria", "Unknown", "US"))
#pie(countryData$n, labels = countryData$country, main="Enrollments by country greater than 10")
#gender
genderData = dfE %>%
group_by(gender) %>%
count(dfE$gender)
genderData = select(genderData, gender, n)
barplot(genderData$n, main="Enrollments by gender",
names.arg = c("Female", 'Male', "Nonbinary", "Other", "Unknown"))
#pie(genderData$n, labels = genderData$gender, main="Enrollments by gender")
#age range
agerangeData = dfE %>%
group_by(age_range) %>%
count(dfE$age_range)
agerangeData = select(agerangeData, age_range, n)
barplot(agerangeData$n, main="Enrollments by age range",
names.arg = c("<18", ">65", "18-25", "26-35", "36-45", "46-55", "56-65","Unknown"))
#pie(agerangeData$n, labels = agerangeData$age_range, main="Enrollments by age range")
#highest_education_level
highestEducationData = dfE %>%
group_by(highest_education_level) %>%
count(dfE$highest_education_level)
highestEducationData = select(highestEducationData, highest_education_level, n)
barplot(highestEducationData$n, main="Enrollments by highest education",
names.arg = c("Apprenticeship", "<Secondary", "Professional", "Secondary", "Tertiary", "Degree", "Doctrate", "Masters", "Unknown"))
#pie(highestEducationData$n, labels = highestEducationData$highest_education_level, main="Enrollments by highest education")
#employment area
employmentareaData = dfE %>%
group_by(employment_area) %>%
count(dfE$employment_area)
employmentareaData = select(employmentareaData, employment_area, n)
barplot(employmentareaData$n, main="Enrollments by employment area",
names.arg = employmentareaData$employment_area)
#pie(employmentareaData$n, labels = employmentareaData$employment_area, main="Enrollments by employment area")
#employment area
employmentstatusData = dfE %>%
group_by(employment_status) %>%
count(dfE$employment_status)
employmentstatusData = select(employmentstatusData, employment_status, n)
barplot(employmentstatusData$n, main="Enrollments by employment status",
names.arg = employmentstatusData$employment_status)
#pie(employmentstatusData$n, labels = employmentstatusData$employment_status, main="Enrollments by employment status")
#country
countryData = dfE %>%
group_by(country) %>%
count(dfE$country) #do a count
countryData = filter(countryData, n > 100) #filter only where greater than 100
countryData = select(countryData, country, n) #select the correct cols
barplot(countryData$n, main="Enrollments by country greater than 100",
names.arg = c("Australia", 'GB', "India", "Nigeria", "Unknown", "US"))
#pie(countryData$n, labels = countryData$country, main="Enrollments by country greater than 10")
par(mfrow=c(1,1))
countryData = dfE %>%
group_by(country) %>%
count(dfE$country) #do a count
countryData = filter(countryData, n > 100) #filter only where greater than 100
countryData = select(countryData, country, n) #select the correct cols
barplot(countryData$n, main="Enrollments by country greater than 100",
names.arg = c("Australia", 'GB', "India", "Nigeria", "Unknown", "US"))
countryData = dfE %>%
group_by(country) %>%
count(dfE$country) #do a count
countryData = filter(countryData, n > 100) #filter only where greater than 100
countryData = select(countryData, country, n) #select the correct cols
barplot(countryData$n, main="Enrollments by country greater than 100",
names.arg = c("Australia", 'GB', "India", "Nigeria", "Unknown", "US")
,xlab = "Count of Enrollments"
,ylab="Country")
countryData = dfE %>%
group_by(country) %>%
count(dfE$country) #do a count
countryData = filter(countryData, n > 100) #filter only where greater than 100
countryData = select(countryData, country, n) #select the correct cols
barplot(countryData$n, main="Enrollments by country greater than 100",
names.arg = c("Australia", 'GB', "India", "Nigeria", "Unknown", "US")
,xlab = "Country"
,ylab="Count of Enrollments")
par(mfrow=c(2,3))
#graph the enrollment data
#country
countryData = dfE %>%
group_by(country) %>%
count(dfE$country) #do a count
countryData = filter(countryData, n > 100) #filter only where greater than 100
countryData = select(countryData, country, n) #select the correct cols
barplot(countryData$n, main="Enrollments by Country",
names.arg = c("Australia", 'GB', "India", "Nigeria", "Unknown", "US")
, xlab = "Country"
, ylab="Count of Enrollments")
#pie(countryData$n, labels = countryData$country, main="Enrollments by country greater than 10")
#gender
genderData = dfE %>%
group_by(gender) %>%
count(dfE$gender)
genderData = select(genderData, gender, n)
barplot(genderData$n, main="Enrollments by Gender",
names.arg = c("Female", 'Male', "Nonbinary", "Other", "Unknown")
, xlab = "Gender"
, ylab="Count of Enrollments")
#pie(genderData$n, labels = genderData$gender, main="Enrollments by gender")
#age range
agerangeData = dfE %>%
group_by(age_range) %>%
count(dfE$age_range)
agerangeData = select(agerangeData, age_range, n)
barplot(agerangeData$n, main="Enrollments by Age Range",
names.arg = c("<18", ">65", "18-25", "26-35", "36-45", "46-55", "56-65","Unknown")
, xlab = "Age Range"
, ylab="Count of Enrollments")
#highest_education_level
highestEducationData = dfE %>%
group_by(highest_education_level) %>%
count(dfE$highest_education_level)
highestEducationData = select(highestEducationData, highest_education_level, n)
barplot(highestEducationData$n, main="Enrollments by highest education",
names.arg = c("Apprenticeship", "<Secondary", "Professional", "Secondary", "Tertiary", "Degree", "Doctrate", "Masters", "Unknown")
, xlab = "Highest Educational Level"
, ylab="Count of Enrollments")
#employment area
employmentareaData = dfE %>%
group_by(employment_area) %>%
count(dfE$employment_area)
employmentareaData = select(employmentareaData, employment_area, n)
barplot(employmentareaData$n, main="Enrollments by Employment Area",
names.arg = employmentareaData$employment_area
, xlab = "Employment Area"
, ylab="Count of Enrollments")
#employment area
employmentstatusData = dfE %>%
group_by(employment_status) %>%
count(dfE$employment_status)
employmentstatusData = select(employmentstatusData, employment_status, n)
barplot(employmentstatusData$n, main="Enrollments by Employment Status",
names.arg = employmentstatusData$employment_status
, xlab = "Employment Status"
, ylab="Count of Enrollments")
par(mfrow=c(1,1))
par(mfrow=c(2,3))
#graph the enrollment data
#country
countryData = dfE %>%
group_by(country) %>%
count(dfE$country) #do a count
countryData = filter(countryData, n > 100) #filter only where greater than 100
countryData = select(countryData, country, n) #select the correct cols
barplot(countryData$n, main="Country",
names.arg = c("Australia", 'GB', "India", "Nigeria", "Unknown", "US")
, xlab = "Country"
, ylab="Count of Enrollments")
#pie(countryData$n, labels = countryData$country, main="Enrollments by country greater than 10")
#gender
genderData = dfE %>%
group_by(gender) %>%
count(dfE$gender)
genderData = select(genderData, gender, n)
barplot(genderData$n, main="Gender",
names.arg = c("Female", 'Male', "Nonbinary", "Other", "Unknown")
, xlab = "Gender"
, ylab="Count of Enrollments")
#pie(genderData$n, labels = genderData$gender, main="Enrollments by gender")
#age range
agerangeData = dfE %>%
group_by(age_range) %>%
count(dfE$age_range)
agerangeData = select(agerangeData, age_range, n)
barplot(agerangeData$n, main="Age Range",
names.arg = c("<18", ">65", "18-25", "26-35", "36-45", "46-55", "56-65","Unknown")
, xlab = "Age Range"
, ylab="Count of Enrollments")
#highest_education_level
highestEducationData = dfE %>%
group_by(highest_education_level) %>%
count(dfE$highest_education_level)
highestEducationData = select(highestEducationData, highest_education_level, n)
barplot(highestEducationData$n, main="Highest Education",
names.arg = c("Apprenticeship", "<Secondary", "Professional", "Secondary", "Tertiary", "Degree", "Doctrate", "Masters", "Unknown")
, xlab = "Highest Educational Level"
, ylab="Count of Enrollments")
#employment area
employmentareaData = dfE %>%
group_by(employment_area) %>%
count(dfE$employment_area)
employmentareaData = select(employmentareaData, employment_area, n)
barplot(employmentareaData$n, main="Employment Area",
names.arg = employmentareaData$employment_area
, xlab = "Employment Area"
, ylab="Count of Enrollments")
#employment area
employmentstatusData = dfE %>%
group_by(employment_status) %>%
count(dfE$employment_status)
employmentstatusData = select(employmentstatusData, employment_status, n)
barplot(employmentstatusData$n, main="Employment Status",
names.arg = employmentstatusData$employment_status
, xlab = "Employment Status"
, ylab="Count of Enrollments")
par(mfrow=c(1,1))
hist(dfLSR$last_completed_step)
dfLSR$last_completed_step
table(dfLSR$last_completed_step)
hist(table(dfLSR$last_completed_step))
plot(table(dfLSR$last_completed_step))
ggplot(data = dfLSR, aes(y = count, x = last_completed_step)) +
geom_bar(stat="identity")
dfLSR
ggplot(data = dfLSR, aes(x = last_completed_step)) +
geom_bar()
dfLSR$last_completed_step
dfLSR %>% drop_na(last_completed_step)
ggplot(data = dfLSR, aes(x = last_completed_step)) +
geom_bar()
fLSR$last_completed_step
dfLSR$last_completed_step
dfLSR %>% drop_na(last_completed_step)
dfLSR
dfLSR %>% filter(!is.na(last_completed_step))
dfLSR
ggplot(data = dfLSR, aes(x = last_completed_step)) +
geom_bar()
na.omit(dfLSR$last_completed_step)
dfLSR %>% filter(!is.na(last_completed_step))
dfLSR %>% filter(na.omit(dfLSR$last_completed_step))
dfLSR$last_completed_step
dfLSR %>% filter(!is.na(dfLSR$last_completed_step))
dfLSR
dfLSR = filter(!is.na(dfLSR$last_completed_step))
df %>% filter(!is.na(dfLSR$last_completed_step))
dfLSR %>% filter(!is.na(last_completed_step))
df = dfLSR %>% filter(!is.na(last_completed_step))
df
dfLSR = dfLSR %>% filter(!is.na(last_completed_step))
ggplot(data = dfLSR, aes(x = last_completed_step)) +
geom_bar()
#percentage complete
ggplot(data = dfLSR, aes(x = last_completed_step)) +
geom_bar() +
labs(title= "Leavers by Last Complete Step", y="Count of Leavers", x = "Step Number") +
theme_bw() +
scale_fill_brewer(palette="PuBu") +
theme(axis.text.x = element_text(angle = 90))
barplot(table(dfLSR$reason)
, main="Reasons for Leaving"
, xlab="Reason"
, ylab="Number of Leavers")
#stage
barplot(table(dfLSR$stage_id)
,ylim=c(0,200)
, main="Leaving Surveys by Stage"
, xlab="Stage"
, ylab="Number of Leavers")
barplot(table(dfLSR$reason)
, main="Reasons for Leaving"
, xlab="Reason"
, ylab="Number of Leavers")
dfVSTotalsPivot
ggplot(data = dfVSTotalsPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Video Completion", y="Views", x = "Video") +
theme_bw() +
scale_fill_brewer(palette="PuBu", name="Viewed",
breaks=c("05", "10", "25" ,"50","75","95", "99"),
labels=c("5%", "10%", "25%" ,"50%","75%","95%", "100%")) +
theme(axis.text.x = element_text(angle = 90))
par(mfrow=c(1,3))
#render number of views by percent complete
ggplot(data = dfVSTotalsPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Video Completion", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Viewed",
breaks=c("05", "10", "25" ,"50","75","95", "99"),
labels=c("5%", "10%", "25%" ,"50%","75%","95%", "100%")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
#video by device
ggplot(data = dfVSDevicePivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Device", y="Views", x = "Video") +
theme_bw() +
scale_fill_brewer(palette="PuBu", name="Device") +
theme(axis.text.x = element_text(angle = 90))
#video by location
ggplot(data = dfVSLocationPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Location", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Location") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
par(mfrow=c(1,1))
par(mfrow=c(2,2))
#render number of views by percent complete
ggplot(data = dfVSTotalsPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Video Completion", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Viewed",
breaks=c("05", "10", "25" ,"50","75","95", "99"),
labels=c("5%", "10%", "25%" ,"50%","75%","95%", "100%")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
#video by device
ggplot(data = dfVSDevicePivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Device", y="Views", x = "Video") +
theme_bw() +
scale_fill_brewer(palette="PuBu", name="Device") +
theme(axis.text.x = element_text(angle = 90))
#video by location
ggplot(data = dfVSLocationPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Location", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Location") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
par(mfrow=c(1,1))
par(mfrow=c(2,2))
#render number of views by percent complete
ggplot(data = dfVSTotalsPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Video Completion", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Viewed",
breaks=c("05", "10", "25" ,"50","75","95", "99"),
labels=c("5%", "10%", "25%" ,"50%","75%","95%", "100%")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
#video by device
ggplot(data = dfVSDevicePivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Device", y="Views", x = "Video") +
theme_bw() +
scale_fill_brewer(palette="PuBu", name="Device") +
theme(axis.text.x = element_text(angle = 90))
#video by location
ggplot(data = dfVSLocationPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Location", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Location") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
par(mfrow=c(1,1))
par(mfrow=c(2,2))
#render number of views by percent complete
ggplot(data = dfVSTotalsPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Video Completion", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Viewed",
breaks=c("05", "10", "25" ,"50","75","95", "99"),
labels=c("5%", "10%", "25%" ,"50%","75%","95%", "100%")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
#video by device
ggplot(data = dfVSDevicePivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Device", y="Views", x = "Video") +
theme_bw() +
scale_fill_brewer(palette="PuBu", name="Device") +
theme(axis.text.x = element_text(angle = 90))
#video by location
ggplot(data = dfVSLocationPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Location", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Location") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
par(mfrow=c(1,1))
par(mfrow=c(2,2))
ggplot(data = dfVSTotalsPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Video Completion", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Viewed",
breaks=c("05", "10", "25" ,"50","75","95", "99"),
labels=c("5%", "10%", "25%" ,"50%","75%","95%", "100%")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
#render number of views by percent complete
require(gridExtra)
vid1 = ggplot(data = dfVSTotalsPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Video Completion", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Viewed",
breaks=c("05", "10", "25" ,"50","75","95", "99"),
labels=c("5%", "10%", "25%" ,"50%","75%","95%", "100%")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
#video by device
vid2 = ggplot(data = dfVSDevicePivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Device", y="Views", x = "Video") +
theme_bw() +
scale_fill_brewer(palette="PuBu", name="Device") +
theme(axis.text.x = element_text(angle = 90))
#video by location
vid3 = ggplot(data = dfVSLocationPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Location", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Location") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
grid.arrange(vid1, vid2, vid3, ncol=2)
library(gridExtra)
library(gridExtra)
vid1 = ggplot(data = dfVSTotalsPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Video Completion", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Viewed",
breaks=c("05", "10", "25" ,"50","75","95", "99"),
labels=c("5%", "10%", "25%" ,"50%","75%","95%", "100%")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
#video by device
vid2 = ggplot(data = dfVSDevicePivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Device", y="Views", x = "Video") +
theme_bw() +
scale_fill_brewer(palette="PuBu", name="Device") +
theme(axis.text.x = element_text(angle = 90))
#video by location
vid3 = ggplot(data = dfVSLocationPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Location", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Location") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
grid.arrange(vid1, vid2, vid3, ncol=2, nrow=1)
vid1 = ggplot(data = dfVSTotalsPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Video Completion", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Viewed",
breaks=c("05", "10", "25" ,"50","75","95", "99"),
labels=c("5%", "10%", "25%" ,"50%","75%","95%", "100%")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
#video by device
vid2 = ggplot(data = dfVSDevicePivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Device", y="Views", x = "Video") +
theme_bw() +
scale_fill_brewer(palette="PuBu", name="Device") +
theme(axis.text.x = element_text(angle = 90))
#video by location
vid3 = ggplot(data = dfVSLocationPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Location", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Location") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
grid.arrange(vid1, vid2, vid3, ncol=2, nrow=2)
test = grid.arrange(vid1, vid2, vid3, ncol=2, nrow=2)
vid1 = ggplot(data = dfVSTotalsPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Video Completion", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Viewed",
breaks=c("05", "10", "25" ,"50","75","95", "99"),
labels=c("5%", "10%", "25%" ,"50%","75%","95%", "100%")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
#video by device
vid2 = ggplot(data = dfVSDevicePivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Device", y="Views", x = "Video") +
theme_bw() +
scale_fill_brewer(palette="PuBu", name="Device") +
theme(axis.text.x = element_text(angle = 90))
#video by location
vid3 = ggplot(data = dfVSLocationPivot, aes(fill=percentviewed, y = count, x = as.character(step_position))) +
geom_bar(stat="identity", position="dodge") +
labs(title= "Views by Location", y="Views", x = "Video") +
scale_fill_brewer(palette="PuBu", name="Location") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
grid.arrange(vid1, vid2, vid3, ncol=2, nrow=2)
